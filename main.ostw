import "customGameSettings.json";
import "initialSettings.ostw";
import "utils/index.ostw";
import "mobs/index.ostw";
// import "worldUnlocks.ostw";
import "hud.ostw";
import "items/index.ostw";
import "player/index.ostw";
import "purchase/index.ostw";
// import "guides.ostw";
// import "player/code.ostw";

rule: "[All World] Mob Health 1-2 Team Members"
if (IsGameInProgress() == true)
if (NumberOfPlayers(Team.Team2) <= 2)
if (MobHealthModifier != 0.88)
{
	MobHealthModifier = 0.88;
}

rule: "[All World] Mob Health 3 Team Members"
if (IsGameInProgress() == true)
if (NumberOfPlayers(Team.Team2) == 3)
if (MobHealthModifier != 0.84)
{
	MobHealthModifier = 0.84;
}

rule: "[All World] Mob Health 4 Team Members"
if (IsGameInProgress() == true)
if (NumberOfPlayers(Team.Team2) == 4)
if (MobHealthModifier != 0.8)
{
	MobHealthModifier = 0.8;
}

rule: "[All World] Mob Health 5 Team Members"
if (IsGameInProgress() == true)
if (NumberOfPlayers(Team.Team2) == 5)
if (MobHealthModifier != 0.76)
{
	MobHealthModifier = 0.76;
}

rule: "[All World] Mob Health 6 Team Members"
if (IsGameInProgress() == true)
if (NumberOfPlayers(Team.Team2) == 6)
if (MobHealthModifier != 0.72)
{
	MobHealthModifier = 0.72;
}

rule: "[All World] Mob Health 7 Team Members"
if (IsGameInProgress() == true)
if (NumberOfPlayers(Team.Team2) == 7)
if (MobHealthModifier != 0.69)
{
	MobHealthModifier = 0.69;
}

// TODO: DISABLE THIS
rule: "[All World] Debug ***********************************************************************************************"
Event.OngoingPlayer
Team.Team2
if (IsButtonHeld(Player, Button.Ultimate) == true)
if (IsButtonHeld(Player, Button.Crouch) == true)
if (HostPlayer() == true)
{
	AllPlayers(Team.Team2).Coins += 10000 * 100;
	AllPlayers(Team.Team2).Item_Trinket += 10000 * 10;
	AllPlayers(Team.Team2).Item_WishingStar += 10000;
	AllPlayers(Team.Team2).Item_MoneyBag += 10000;
	AllPlayers(Team.Team2).Item_ExperiencePotion += 10000;
	AllPlayers(Team.Team2).PlayerLevel = 999;
	AllPlayers(Team.Team2).TraitPoints = 999;
	AllPlayers(Team.Team2).StatPoints = 999;
	BigMessage(AllPlayers(Team.Team2), "Cheat Mode activated by Host - Enjoy your free currencies!");
}
rule: "[All World] Team 2 Respawn"
Event.OngoingPlayer
Team.Team2
if (IsInSpawnRoom(Player) == true)
{
	Teleport(Player, Vector(39.575, 9.335, -87.635));
}

rule: "[Energy] Upgrade Lv Up Reward Etc"
if (EnergyPoints >= EnergyToLvUp)
{
	Wait(0.25, WaitBehavior.IgnoreCondition);
	WaveSet = 50;
	EnergyPoints = 0;
	Stage += 1;
	Wait(1, WaitBehavior.IgnoreCondition);
	LoopIfConditionIsTrue();
}

rule: "[All World] Set New Wave on Energy 1000"
if (EnergyPoints >= EnergyToLvUp)
{
	SetNewWave = true;
}

rule: "[All World] Set Wave"
if (SetNewWave == true)
{
	IsBreakTime = true;
	Wait(0.5, WaitBehavior.IgnoreCondition);
	AllPlayers(Team.Team1).DamageDealt = [];
	AllPlayers(Team.Team1).HP = [];
	AllPlayers(Team.Team1).MoveSpeed = [];
	Heal(AllPlayers(Team.Team2), null, 500);
	WaveSet = RandomInteger(1,9);
	if (WaveSet == LastWaveSet)
	{
		WaveSet = RandomInteger(1,9);
		if (WaveSet == LastWaveSet)
		{
			if (LastWaveSet == 1)
			{
				WaveSet = 2;
			}
			else
			{
				WaveSet = LastWaveSet - 1;
			}
		}
	}
	LastWaveSet = WaveSet;
	Wait(1.1, WaitBehavior.IgnoreCondition);
	AllPlayers(Team.Team1).DamageDealt = [];
	SetNewWave = false;
}

rule: "[Energy] Inactivity Energy Drain"
if (EnergyPoints > 0)
{
	ChaseVariableAtRate(EnergyPoints, 0, NumberOfPlayers(Team.Team2) * 2, RateChaseReevaluation.DestinationAndRate);
}

rule: "[All World] Time"
{
	SetMatchTime(3600);
}