import "../utils/index.ostw";

import "hud/statUpgrades.ostw";

rule: "[Upgrade] BasicDamageUpgrade"
Event.OngoingPlayer
if (IsButtonHeld(Player, Button.Interact) == true)
if (StatPoints >= 1)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, Vector(53.993, 12.975, -81.314)) <= 1.5)
{
	StatPoints = StatPoints - 1;
	DamageDealt += 1;
	SetDamageDealt(Player, DamageDealt);
	PlayEffect(AllPlayers(Team.All), PlayEffect.BuffExplosionSound, Color.White, Player, 45);
	Wait(0.1, WaitBehavior.IgnoreCondition);
	LoopIfConditionIsTrue();
}

rule: "[Upgrade] BasicHealthUpgrade"
Event.OngoingPlayer
if (IsButtonHeld(Player, Button.Interact) == true)
if (StatPoints >= 1)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, Vector(56.398, 12.975, -81.814)) <= 1.5)
{
	StatPoints = StatPoints - 1;
	HP += 1;
	SetMaxHealth(Player, HP);
	if (IsBreakTime == true)
	{
		MinWait();
		SetPlayerHealth(Player, MaxHealth(Player));
	}
	PlayEffect(AllPlayers(Team.All), PlayEffect.BuffExplosionSound, Color.White, Player, 45);
	Wait(0.1, WaitBehavior.IgnoreCondition);
	LoopIfConditionIsTrue();
}

rule: "[Upgrade] BasicDamageReceiveUpgrade"
Event.OngoingPlayer
if (IsButtonHeld(Player, Button.Interact) == true)
if (DamageReceive > 40)
if (StatPoints >= 1)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, Vector(54.539, 12.975, -77.976)) <= 1.5)
{
	StatPoints = StatPoints - 1;
	DamageReceive -= 0.25;
	SetDamageReceived(Player, DamageReceive);
	PlayEffect(AllPlayers(Team.All), PlayEffect.BuffExplosionSound, Color.White, Player, 45);
	Wait(0.5, WaitBehavior.IgnoreCondition);
	LoopIfConditionIsTrue();
}

rule: "[Upgrade] BasicHealingDealtUpgrade"
Event.OngoingPlayer
if (IsButtonHeld(Player, Button.Interact) == true)
if (StatPoints >= 1)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, Vector(56.873, 12.975, -78.476)) <= 1.5)
{
	StatPoints = StatPoints - 1;
	HealingDealt += 1;
	SetHealingDealt(Player, HealingDealt);
	PlayEffect(AllPlayers(Team.All), PlayEffect.BuffExplosionSound, Color.White, Player, 45);
	Wait(0.1, WaitBehavior.IgnoreCondition);
	LoopIfConditionIsTrue();
}