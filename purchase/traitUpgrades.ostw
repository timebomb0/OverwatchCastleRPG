
import "../utils/index.ostw";
import "hud/traitUpgrades.ostw";

rule: "[Trait] Unlock Move Speed Upgrade"
Event.OngoingPlayer
Team.Team2
if (IsButtonHeld(Player, Button.Interact) == true)
if (TraitsUnlocked[0] == false)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, MoveSpeedTraitEffectLoc) <= 2.5)
if (Coins >= 50000)
{
	Coins -= 50000;
	NewMessage("Unlocked Move Speed Trait");
	TraitsUnlocked[0] = true;
	Wait(1, WaitBehavior.IgnoreCondition);
}

rule: "[Trait] Move Speed Upgrade"
Event.OngoingPlayer
Team.Team2
if (IsButtonHeld(Player, Button.Interact) == true)
if (TraitsUnlocked[0] == true)
if (TraitPoints >= 1)
if (MoveSpeed < 500)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, MoveSpeedTraitEffectLoc) <= 2.5)
{
	TraitPoints -= 1;
	MoveSpeed += 10;
	SetMoveSpeed(Player, MoveSpeed);
	PlayEffect(AllPlayers(Team.All), PlayEffect.BuffExplosionSound, Color.White, Player, 45);
	NewMessage("Upgraded +10% Move Speed Trait");
	Wait(1, WaitBehavior.IgnoreCondition);
}

rule: "[Trait] Unlock Jump Speed Upgrade"
Event.OngoingPlayer
Team.Team2
if (IsButtonHeld(Player, Button.Interact) == true)
if (TraitsUnlocked[1] == false)
if (Coins >= 50000)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, JumpSpeedTraitEffectLoc) <= 2.5)
{
	Coins -= 50000;
	NewMessage("Unlocked Jump Height Trait");
	TraitsUnlocked[1] = true;
	Wait(1, WaitBehavior.IgnoreCondition);
}

rule: "[Trait] Jump Speed Upgrade"
Event.OngoingPlayer
Team.Team2
if (IsButtonHeld(Player, Button.Interact) == true)
if (TraitsUnlocked[1] == true)
if (TraitPoints >= 1)
if (JumpSpeed < 300)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, JumpSpeedTraitEffectLoc) <= 2.5)
{
	TraitPoints -= 1;
	JumpSpeed += 10;
	SetJumpVerticalSpeed(Player, JumpSpeed);
	PlayEffect(AllPlayers(Team.All), PlayEffect.BuffExplosionSound, Color.White, Player, 45);
	NewMessage("Upgraded +10% Jump Height Trait");
	Wait(1, WaitBehavior.IgnoreCondition);
}

rule: "[Trait] Unlock Ammo Capacity Upgrade"
Event.OngoingPlayer
Team.Team2
if (IsButtonHeld(Player, Button.Interact) == true)
if (TraitsUnlocked[2] == false)
if (Coins >= 200000)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, AmmoCapacityTraitEffectLoc) <= 2.5)
{
	Coins -= 200000;
	NewMessage("Unlocked Ammo Capacity Trait");
	TraitsUnlocked[2] = true;
	Wait(1, WaitBehavior.IgnoreCondition);
}

rule: "[Trait] Ammo Capacity Upgrade"
Event.OngoingPlayer
Team.Team2
if (IsButtonHeld(Player, Button.Interact) == true)
if (TraitsUnlocked[2] == true)
if (TraitPoints >= 1)
if (AmmoCapacity < 200)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, AmmoCapacityTraitEffectLoc) <= 2.5)
{
	// If user hasn't switched heroes, they wont have base ammo set
	if (AmmoCapacity == 100)
	{
		BaseMaxAmmo0 = MaxAmmo(Player, 0);
		BaseMaxAmmo1 = MaxAmmo(Player, 1);
	}
	Coins -= 10000 * 2;
	AmmoCapacity += 5;
	SetMaxAmmo(Player, 1, BaseMaxAmmo1 * (AmmoCapacity / 100));
	SetMaxAmmo(Player, 0, BaseMaxAmmo0 * (AmmoCapacity / 100));
	Wait(0.1, WaitBehavior.IgnoreCondition);
	SetAmmo(Player, 0, MaxAmmo(Player, 0));
	SetAmmo(Player, 1, MaxAmmo(Player, 1));
	PlayEffect(AllPlayers(Team.All), PlayEffect.BuffExplosionSound, Color.White, Player, 45);
	NewMessage("Upgraded +5% Ammo Capacity Trait");
	Wait(1, WaitBehavior.IgnoreCondition);
}

rule: "[Trait] Unlock Ultimate Gen Upgrade"
Event.OngoingPlayer
Team.Team2
if (IsButtonHeld(Player, Button.Interact) == true)
if (TraitsUnlocked[3] == false)
if (Coins >= 150000)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, UltimateGenTraitEffectLoc) <= 2.5)
{
	Coins -= 150000;
	NewMessage("Unlocked Passive Ultimate Generation Trait");
	TraitsUnlocked[3] = true;
	Wait(1, WaitBehavior.IgnoreCondition);
}

rule: "[Trait] Ultimate Gen Upgrade"
Event.OngoingPlayer
Team.Team2
if (IsButtonHeld(Player, Button.Interact) == true)
if (TraitsUnlocked[3] == true)
if (TraitPoints >= 1)
if (UltimateGain < 10)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, UltimateGenTraitEffectLoc) <= 2.5)
{
	UltimateGain += 1;
	PlayEffect(AllPlayers(Team.All), PlayEffect.BuffExplosionSound, Color.White, Player, 45);
	NewMessage("Upgraded +1% Ultimate Generation Trait");
	Wait(1, WaitBehavior.IgnoreCondition);
}

rule: "[Trait] Unlock Projectile Speed Upgrade"
Event.OngoingPlayer
Team.Team2
if (IsButtonHeld(Player, Button.Interact) == true)
if (TraitsUnlocked[4] == false)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, ProjectileSpeedTraitEffectLoc) <= 2.5)
if (Coins >= 100000)
{
	Coins -= 100000;
	NewMessage("Unlocked Projectile Speed Trait");
	TraitsUnlocked[4] = true;
	Wait(1, WaitBehavior.IgnoreCondition);
}

rule: "[Trait] Projectile Speed Upgrade"
Event.OngoingPlayer
Team.Team2
if (IsButtonHeld(Player, Button.Interact) == true)
if (TraitsUnlocked[4] == true)
if (TraitPoints >= 1)
if (ProjectileSpeed < 500)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, ProjectileSpeedTraitEffectLoc) <= 2.5)
{
	TraitPoints -= 1;
	ProjectileSpeed += 10;
	SetProjectileSpeed(Player, ProjectileSpeed);
	PlayEffect(AllPlayers(Team.All), PlayEffect.BuffExplosionSound, Color.White, Player, 45);
	NewMessage("Upgraded +10% Projectile Speed Trait");
	Wait(1, WaitBehavior.IgnoreCondition);
}

rule: "[Trait] Unlock Cooldown Reduction Upgrade"
Event.OngoingPlayer
Team.Team2
if (IsButtonHeld(Player, Button.Interact) == true)
if (TraitsUnlocked[5] == false)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, CooldownReductionTraitEffectLoc) <= 2.5)
if (Coins >= 250000)
{
	Coins -= 250000;
	NewMessage("Unlocked Cooldown Reduction Trait");
	TraitsUnlocked[5] = true;
	Wait(1, WaitBehavior.IgnoreCondition);
}

rule: "[Trait] Cooldown Reduction Upgrade"
Event.OngoingPlayer
Team.Team2
if (IsButtonHeld(Player, Button.Interact) == true)
if (TraitsUnlocked[5] == true)
if (TraitPoints >= 1)
if (CooldownReduction < 50)
if (IsAlive(Player) == true)
if (DistanceBetween(Player, CooldownReductionTraitEffectLoc) <= 2.5)
{
	TraitPoints -= 1;
	CooldownReduction += 5;
	PlayEffect(AllPlayers(Team.All), PlayEffect.BuffExplosionSound, Color.White, Player, 45);
	NewMessage("Upgraded +5% Cooldown Reduction Trait");
	Wait(1, WaitBehavior.IgnoreCondition);
}